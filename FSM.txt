#include <Keypad.h>
#include <LiquidCrystal.h>
#include <SPI.h>       
#include <MFRC522.h>




#define keypad1    0
#define lcd1       1
#define password  2
#define Buzzer    3
#define relay     4
#define End       5

/////////////////keypd////////////////////////////////
const uint8_t ROWS = 4;
const uint8_t COLS = 4;
char keys[ROWS][COLS] = {
  { '1', '2', '3', 'A' },
  { '4', '5', '6', 'B' },
  { '7', '8', '9', 'C' },
  { '*', '0', '#', 'D' }
};

uint8_t colPins[COLS] = { 5, 4, 3, 2 }; // Pins connected to C1, C2, C3, C4
uint8_t rowPins[ROWS] = { 9, 8, 7, 6 }; // Pins connected to R1, R2, R3, R4

Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);


///////////////LCD/////////////////////////////////////
LiquidCrystal lcd(12, 11, 10, 9, 8, 7);
////////////////
///////////BUZZ//////////////////

int code[] = {1, 2, 3}; // array with 3 digit code to transmit
int n = 0;
int beeps = 0; // remember the number of beeps played for this digit
unsigned long prevMillis = 0;
//////////////////////////////////////////
////////////////relay///////////////////////////////////////


#define SS_PIN 10       // that SS pin on the card? a #define is a macro.. a easy representation in english as to what you are up to.
#define RST_PIN 9       // strictly not necessary, but tell it where and what.

#define RELAY_PIN 3

#define DEBUG true

#define VALID_TAG1 "_43_7b_e2_9a"
#define VALID_TAG2 "43 7B E2 9A"


MFRC522 mfrc522(SS_PIN, RST_PIN);   // Create MFRC522 instance. // you have now made a MRFC object.. this is your gateway to the device.
/**
 * this is global space. anything declared here can be accessed by the everything inside this file
 * 
 */

/**
 * @brief setup().. this code runs once at startup. put setup code in here.. -_-
 */

  int countdownTimer = 30;


//////////////////////////////
char Task = 0; 
int Password = 0;
///////////////////
void keypad1_Task();
void lcd1_Task();
void Buzzer_Task();
void relay_Task() ;
void password_Task();

//////////////////////

void setup() {


Serial.begin(9600);

 lcd.begin(16, 2);
  // you can now interact with the LCD, e.g.:
  lcd.print("Hello Mohammad!");



////////////////////////////////////
 Serial.begin(9600);   // a way to read what the hell the arduino is up to.
  SPI.begin();          // starts up the SPI bus
  mfrc522.PCD_Init();   // starts up the card reader
  pinMode(RELAY_PIN, OUTPUT);
  digitalWrite(RELAY_PIN, HIGH);

  Serial.println("Approximate your card to the reader...");   // Serial.print("bla bla"); is how you send text out to the PC
  Serial.println();

}

void loop ()  {


 switch(Task) {

    case keypad1 :
    
     keypad1_Task();
if(keypad1 == '*') {
     Task = lcd1;
}
    break;


    case lcd1 :
    
     lcd1_Task();
      
     Task = password;


    break;

 case password :
    
     password_Task();

     if(Password ==  0    ){           
     Task = Buzzer;
}

else (Task = keypad1) ;


 

    break;
      



 case Buzzer :
    
     Buzzer_Task();

     Task=relay;


    break;

  default:
  
    Task = keypad1;
    break;

  }


} 


void keypad1_Task() {  


  char key = keypad.getKey();

  if (key != NO_KEY) {
    Serial.println(key);
  
}  } 

void Buzzer_Task(){



 morse ();
}

void morse() {
  if (n < 3) { // if not all digits are played
    if (beeps < code[n]) { // if number of beeps is not equal to # digit, play a beep
      if (millis() - prevMillis >= 200 ) { // if 200 ms passed
        tone(Buzzer, 500, 1000); // beep for 100 ms
        prevMillis = millis(); // reset the timer
        beeps++; // remember you played a beep
      }
    } 
}
}

void relay_Task() {

 delay(1000); // chill for 1 second

  String UID = "";
  if(!mfrc522.PICC_IsNewCardPresent()){  // this is a convenience function. if you hover over the test, it will show you its return type. in this case a bool.... a true/false, yes/no 1/0
                                          // this is a if(){}   as name implies. if( this is true){ do the stuff in here if condition is true} else {do the stuff in here if condition is false}   ... simple?
    Serial.println("Mohammad!");
    return;
  }

  if(!mfrc522.PICC_ReadCardSerial()){        // this actually reads the serial of the tag
    Serial.println("get me a valid tag you muppet");
    return;
  }
  #if DEBUG
  mfrc522.PICC_DumpDetailsToSerial(&(mfrc522.uid)); // will spit all the info to the serial port
  #endif
  
  
  for(byte i = 0;i < mfrc522.uid.size; i++){
    UID.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? "_0" : "_"));
    UID.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  Serial.print("my ID is:");
  Serial.println(UID);

  if(UID == VALID_TAG1 || UID == VALID_TAG2){
   
    countdownTimer = 30;
    digitalWrite(RELAY_PIN, LOW);
    Serial.println("yay");
    Serial.println(countdownTimer);
  }

  if(countdownTimer < 0){
    digitalWrite(RELAY_PIN, HIGH);
    countdownTimer = 30;
  }

  countdownTimer--;
  Serial.print(countdownTimer);
  
}



void lcd1_Task(){

lcd.print("Hello Mohammad!");



}



void password_Task(){




}












